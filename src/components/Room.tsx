
import { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Card } from '@/components/ui/card';
import { Motion, AnimatePresence } from '@/components/ui/motion';

type RoomProps = {
  type: 'bedroom' | 'kitchen' | 'bathroom' | 'livingroom';
  addToInventory: (item: string) => void;
  performAction: (action: string) => void;
};

const Room = ({ type, addToInventory, performAction }: RoomProps) => {
  const [showActionMenu, setShowActionMenu] = useState<string | null>(null);

  const roomItems = {
    bedroom: [
      { id: 'bed', name: '–ö—Ä–æ–≤–∞—Ç—å', actions: ['sleep'], icon: 'üõèÔ∏è' },
      { id: 'wardrobe', name: '–®–∫–∞—Ñ', items: ['–æ–¥–µ–∂–¥–∞', '–∫–Ω–∏–≥–∞', '–∫–æ—à–µ–ª–µ–∫'], icon: 'ü™ü' },
      { id: 'shelf', name: '–ü–æ–ª–∫–∞', items: ['—Ñ–æ—Ç–æ', '–∏–≥—Ä—É—à–∫–∞', '—Ä—É—á–∫–∞'], icon: 'üìö' },
      { id: 'table', name: '–°—Ç–æ–ª', items: ['–Ω–æ—É—Ç–±—É–∫', '—Ç–µ—Ç—Ä–∞–¥—å'], icon: 'ü™ë' },
    ],
    kitchen: [
      { id: 'fridge', name: '–•–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫', items: ['—è–±–ª–æ–∫–æ', '—Å—ã—Ä', '–º–æ–ª–æ–∫–æ'], icon: 'üßä' },
      { id: 'stove', name: '–ü–ª–∏—Ç–∞', actions: ['cook'], icon: 'üç≥' },
      { id: 'table', name: '–ö—É—Ö–æ–Ω–Ω—ã–π —Å—Ç–æ–ª', actions: ['eat'], icon: 'üçΩÔ∏è' },
      { id: 'cupboard', name: '–®–∫–∞—Ñ—á–∏–∫', items: ['—Ç–∞—Ä–µ–ª–∫–∞', '—á–∞—à–∫–∞', '–Ω–æ–∂'], icon: 'ü™ë' },
    ],
    bathroom: [
      { id: 'sink', name: '–†–∞–∫–æ–≤–∏–Ω–∞', actions: ['washHands'], icon: 'üö∞' },
      { id: 'shower', name: '–î—É—à', actions: ['takeShower'], icon: 'üöø' },
      { id: 'cabinet', name: '–®–∫–∞—Ñ—á–∏–∫', items: ['–∑—É–±–Ω–∞—è —â–µ—Ç–∫–∞', '–ø–æ–ª–æ—Ç–µ–Ω—Ü–µ', '–º—ã–ª–æ'], icon: 'üóÑÔ∏è' },
      { id: 'toilet', name: '–¢—É–∞–ª–µ—Ç', actions: ['useToilet'], icon: 'üöΩ' },
    ],
    livingroom: [
      { id: 'sofa', name: '–î–∏–≤–∞–Ω', actions: ['rest'], icon: 'üõãÔ∏è' },
      { id: 'tv', name: '–¢–µ–ª–µ–≤–∏–∑–æ—Ä', actions: ['watchTV'], icon: 'üì∫' },
      { id: 'bookshelf', name: '–ö–Ω–∏–∂–Ω—ã–π —à–∫–∞—Ñ', items: ['–∫–Ω–∏–≥–∞', '–∂—É—Ä–Ω–∞–ª', '—Ñ–æ—Ç–æ–∞–ª—å–±–æ–º'], icon: 'üìö' },
      { id: 'coffeeTable', name: '–ñ—É—Ä–Ω–∞–ª—å–Ω—ã–π —Å—Ç–æ–ª–∏–∫', items: ['–ø—É–ª—å—Ç', '–≤–∞–∑–∞'], icon: 'ü™ë' },
    ],
  };

  const roomClasses = {
    bedroom: 'room-bedroom',
    kitchen: 'room-kitchen',
    bathroom: 'room-bathroom',
    livingroom: 'room-livingroom',
  };

  const roomTitles = {
    bedroom: '–°–ø–∞–ª—å–Ω—è',
    kitchen: '–ö—É—Ö–Ω—è',
    bathroom: '–í–∞–Ω–Ω–∞—è',
    livingroom: '–ì–æ—Å—Ç–∏–Ω–∞—è',
  };

  const handleItemClick = (itemId: string) => {
    setShowActionMenu(itemId === showActionMenu ? null : itemId);
  };

  const handleTakeItem = (item: string) => {
    addToInventory(item);
    setShowActionMenu(null);
  };

  const handleAction = (action: string) => {
    performAction(action);
    setShowActionMenu(null);
  };

  const getActionName = (action: string) => {
    const actionNames: Record<string, string> = {
      'sleep': '–°–ø–∞—Ç—å',
      'eat': '–ü–æ–µ—Å—Ç—å',
      'washHands': '–ü–æ–º—ã—Ç—å —Ä—É–∫–∏',
      'takeShower': '–ü—Ä–∏–Ω—è—Ç—å –¥—É—à',
      'cook': '–ì–æ—Ç–æ–≤–∏—Ç—å',
      'useToilet': '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å',
      'rest': '–û—Ç–¥–æ—Ö–Ω—É—Ç—å',
      'watchTV': '–°–º–æ—Ç—Ä–µ—Ç—å –¢–í'
    };
    return actionNames[action] || action;
  };

  return (
    <div className={`${roomClasses[type]} p-6 rounded-xl h-full relative shadow-md`}>
      <h2 className="text-2xl font-bold mb-6 flex items-center">
        {roomTitles[type]}
      </h2>
      
      <div className="grid grid-cols-2 gap-4">
        {roomItems[type].map((item) => (
          <Card 
            key={item.id} 
            className={`p-4 cursor-pointer transition-all duration-300 hover:shadow-lg hover:border-primary ${showActionMenu === item.id ? 'border-primary ring-1 ring-primary' : ''}`}
            onClick={() => handleItemClick(item.id)}
          >
            <div className="flex items-center gap-3">
              <div className="text-2xl">{item.icon}</div>
              <div className="font-medium">{item.name}</div>
            </div>
            
            {showActionMenu === item.id && (
              <div className="mt-3 space-y-2 animate-fade-in">
                {item.items && item.items.map((subItem) => (
                  <Button 
                    key={subItem} 
                    variant="outline" 
                    size="sm" 
                    className="w-full transition-all hover:bg-primary hover:text-white"
                    onClick={() => handleTakeItem(subItem)}
                  >
                    –í–∑—è—Ç—å {subItem}
                  </Button>
                ))}
                
                {item.actions && item.actions.map((action) => (
                  <Button 
                    key={action} 
                    variant="outline" 
                    size="sm" 
                    className="w-full transition-all hover:bg-primary hover:text-white"
                    onClick={() => handleAction(action)}
                  >
                    {getActionName(action)}
                  </Button>
                ))}
              </div>
            )}
          </Card>
        ))}
      </div>
      
      <div className="absolute bottom-6 right-6">
        <div className="w-16 h-32 bg-primary rounded-full relative animate-float">
          {/* –ü—Ä–æ—Å—Ç–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ */}
          <div className="w-10 h-10 bg-yellow-200 rounded-full absolute top-0 left-1/2 transform -translate-x-1/2"></div>
          <div className="absolute w-full text-center -bottom-6 font-medium text-primary-foreground">–í—ã</div>
        </div>
      </div>
    </div>
  );
};

export default Room;
