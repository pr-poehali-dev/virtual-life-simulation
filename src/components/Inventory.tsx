
import { Button } from '@/components/ui/button';
import { ScrollArea } from '@/components/ui/scroll-area';
import { Badge } from '@/components/ui/badge';

type InventoryProps = {
  items: string[];
  removeFromInventory: (item: string) => void;
};

const Inventory = ({ items, removeFromInventory }: InventoryProps) => {
  // –û–±—ä–µ–∫—Ç –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–∫–æ–Ω–æ–∫ –ø—Ä–µ–¥–º–µ—Ç–æ–≤
  const itemIcons: Record<string, string> = {
    '—è–±–ª–æ–∫–æ': 'üçé',
    '—Å—ã—Ä': 'üßÄ',
    '–º–æ–ª–æ–∫–æ': 'ü•õ',
    '—Ç–∞—Ä–µ–ª–∫–∞': 'üçΩÔ∏è',
    '—á–∞—à–∫–∞': '‚òï',
    '–Ω–æ–∂': 'üî™',
    '–æ–¥–µ–∂–¥–∞': 'üëï',
    '–∫–Ω–∏–≥–∞': 'üìö',
    '–∫–æ—à–µ–ª–µ–∫': 'üëõ',
    '—Ñ–æ—Ç–æ': 'üñºÔ∏è',
    '–∏–≥—Ä—É—à–∫–∞': 'üß∏',
    '—Ä—É—á–∫–∞': '‚úèÔ∏è',
    '–Ω–æ—É—Ç–±—É–∫': 'üíª',
    '—Ç–µ—Ç—Ä–∞–¥—å': 'üìì',
    '–∑—É–±–Ω–∞—è —â–µ—Ç–∫–∞': 'ü™•',
    '–ø–æ–ª–æ—Ç–µ–Ω—Ü–µ': 'üßñ',
    '–º—ã–ª–æ': 'üßº',
    '–ø—É–ª—å—Ç': 'üéÆ',
    '–≤–∞–∑–∞': 'üè∫',
    '–∂—É—Ä–Ω–∞–ª': 'üì∞',
    '—Ñ–æ—Ç–æ–∞–ª—å–±–æ–º': 'üìî',
  };

  const getItemIcon = (item: string) => {
    return itemIcons[item] || 'üì¶';
  };

  return (
    <div className="p-4 h-full flex flex-col">
      <div className="flex items-center mb-4">
        <h3 className="text-lg font-semibold flex items-center">
          <span className="mr-2">üéí</span> –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å
        </h3>
        <Badge variant="outline" className="ml-2">
          {items.length} / 10
        </Badge>
      </div>
      
      {items.length === 0 ? (
        <div className="flex-1 flex items-center justify-center text-muted-foreground">
          <p className="text-center">–í–∞—à –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –ø—É—Å—Ç.<br/>–°–æ–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç—ã –≤ –∫–æ–º–Ω–∞—Ç–∞—Ö.</p>
        </div>
      ) : (
        <ScrollArea className="flex-1 -mx-2 px-2">
          <div className="space-y-2 pb-2">
            {items.map((item, index) => (
              <div key={`${item}-${index}`} className="flex items-center justify-between p-2 bg-accent/50 rounded-lg animate-fade-in">
                <div className="flex items-center gap-2">
                  <span className="text-xl">{getItemIcon(item)}</span>
                  <span>{item}</span>
                </div>
                <Button 
                  variant="ghost" 
                  size="icon" 
                  className="h-8 w-8 text-muted-foreground hover:text-destructive"
                  onClick={() => removeFromInventory(item)}
                >
                  ‚úñ
                </Button>
              </div>
            ))}
          </div>
        </ScrollArea>
      )}
    </div>
  );
};

export default Inventory;
